" Author: Aniket Mathur
" Last Modified: June 5, 2016
" Based on the vimrc by Lisa McCutcheon
" Wed Feb 07, 2007

" Vundle {{{
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'tomasr/molokai'

call vundle#end()

filetype plugin indent on
"}}}
" Variables {{{
set nocompatible				" get rid of strict vi compatibility!
set encoding=utf-8				" specify encoding for the special listchars
set list listchars=tab:»•,trail:• " char markers for tabs and trailing ws
set nu							" line numbering on
set showcmd						" shows the commands bar
set autoindent					" autoindent on
set noerrorbells				" bye bye bells :)
set ignorecase					" search without regards to case
set backspace=indent,eol,start	" backspace over everything
set ruler						" which line am I on?
set incsearch					" incremental searching
set hlsearch					" meh
set wildmenu					" shows the a selectable menu when we type cmds
set colorcolumn=80				" sets a colorcolumn at 80 chars
:2mat ErrorMsg '\%81v.'			" backup highlighting if chars over 80
set mouse=a						" for those who feel compelled to use a mouse

set splitbelow					" new splits open below
set splitright					" vertical splits open to the right
let mapleader=","				" redefine map leader for nifty shortcuts
set autoindent					" autoindentation so that things line up
filetype plugin indent on		" vim knows what to do based on type of file
set foldenable					" allows folding at the markers
set foldlevelstart=0			" fold by default
set foldmethod=marker			" folds at the marker
syntax on						" Show syntax
"}}}
" File Specific Indentation Settings {{{
" Expand tabs in C files to spaces
au BufRead,BufNewFile *.{c,h,java} set expandtab shiftwidth=2 tabstop=2

" Do not expand tabs in assembly file.  Make them 8 chars wide.
au BufRead,BufNewFile *.s set noexpandtab shiftwidth=8 tabstop=8
"}}}
" Colorscheme settings {{{
set term=xterm					" make the terminal type xterm for better colors
let g:rehash256=1				" use 256 bit color palette
set t_Co=256					" tells the terminal to use 256 color palette
colorscheme molokai				" sets my colorscheme

" Increase background contrast
hi NonText ctermbg=none ctermfg=none
hi Folded ctermbg=none ctermfg=none
"}}}
" key remappings {{{
" For switching between many opened file by using ctrl+j or ctrl+k
map <C-J> :next <CR>
map <C-K> :prev <CR>
nnoremap <space> za
" Spelling toggle via F10 and F11
map <F10> <Esc>setlocal spell spelllang=en_us<CR>
map <F11> <Esc>setlocal nospell<CR>
nnoremap <leader><space> :nohlsearch<CR>
nnoremap j gj					" visual movement downward. Good for wrapped lines
nnoremap k gk					" visual movement upward. Good for wrapped lines
"}}}
" functions {{{
function! FileHeading()
	let s:line=line(".")
	call setline(s:line,   "/***")
	call append (s:line,   " * Name:            Aniket Mathur")
	call append (s:line+1, " * Date:            " .strftime("%b %d %Y"))
	call append (s:line+2, " * Filename:        " .expand("%"))
	call append (s:line+3, " * Description:     ")
	call append (s:line+4, " * Sources of help: ")
	call append (s:line+5, " ***/")
	unlet s:line
endfunction

imap <F4> <ESC>mz:execute FileHeading()<CR>`z4jA

function! ToggleRelNum()
	if(&relativenumber == 1)
		set norelativenumber
		set number
	else
		set relativenumber
	endif
endfunction

nmap <F5> :call ToggleRelNum()<CR>

function! ToggleCursorLine()
	if(&cursorline == 1)
		set nocursorline
	else
		set cursorline
	endif
endfunction
nmap <C-L> :call ToggleCursorLine()<CR>
"}}}
" vim:ts=4:sts=4:sw=4
